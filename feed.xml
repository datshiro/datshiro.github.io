<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dat Shiro Blog</title>
    <description>Barber is a blog theme for Jekyll built by Thomas Vaeth for Samesies using HTML, Sass, and JavaScript.
</description>
    <link>https://datshiro.github.io/</link>
    <atom:link href="https://datshiro.github.io//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 29 Jan 2020 19:20:34 +0700</pubDate>
    <lastBuildDate>Wed, 29 Jan 2020 19:20:34 +0700</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>What is Vuex?</title>
        <description>&lt;p&gt;If you’re building a medium to large sized app, your state — all the data you need to keep track of — can get pretty complicated.&lt;/p&gt;

&lt;p&gt;It’s not just the amount of information you have to deal with either. The different interactions between your state and all of the different ways your state can change only add to this complexity.&lt;/p&gt;

&lt;p&gt;Managing state is a difficult task! So many bugs and wasted time are due to very complicated state and logic.&lt;/p&gt;

&lt;p&gt;That’s why Evan You created Vuex to go along with Vue.&lt;/p&gt;

&lt;p&gt;It’s not necessary to use for small projects or projects with simple state. But for larger projects, it’s absolutely essential.&lt;/p&gt;

&lt;p&gt;And here’s an interesting fact.&lt;/p&gt;

&lt;p&gt;Evan You originally intended Vuex to be pronounced “vukes” — rhyming with “pukes”. But so many people pronounced it as “view-ex” that he changed his mind 😂.&lt;/p&gt;

&lt;h2 id=&quot;what-is-vuex-and-what-can-vuex-solves&quot;&gt;What is Vuex? and what can Vuex solves?&lt;/h2&gt;
&lt;p&gt;There are cases that you want to share data, state between your components, using Vuex is what you should thinking about.
  First, we should go through to know “Flux” which forms the basis of Vuex, Redux and other similar libraries.&lt;/p&gt;

&lt;h3 id=&quot;flux-is-a-design-pattern-not-a-library&quot;&gt;Flux is a design pattern, not a library&lt;/h3&gt;
&lt;p&gt;The idea of Flux is that defining a set of guiding principles for a scalable front end architecture which is suitable for complex UI app with components and shared data state.&lt;/p&gt;

&lt;p&gt;Vuex and Redux are actually implementation of Flux pattern
  Vuex, in fact, does not implement fully of Flux. Instead, we only need to focus on some key principles below.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;principle-1-single-source-of-truth&quot;&gt;Principle #1: Single Source of Truth&lt;/h4&gt;
  &lt;p&gt;As we’ve known, every component has local data and they don’t care about the other components as well. But if there is any data need to be shared between components needs to be kept in a single place - called &lt;strong&gt;“Store”&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;principle-2-data-is-read-only&quot;&gt;Principle #2: Data is Read-Only&lt;/h4&gt;
  &lt;p&gt;Components are freely to read data from “Store”, but they &lt;strong&gt;cannot change&lt;/strong&gt; the data &lt;strong&gt;directly&lt;/strong&gt;. Instead, they must inform the changes to “Store” through set of defined methods called &lt;strong&gt;“Mutation”&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;principle-3-mutations-must-be-synchronous&quot;&gt;Principle #3: Mutations Must Be Synchronous&lt;/h4&gt;
  &lt;p&gt;Synchronous Mutations ensure state is not dependent on any sequence and timing events. For example, callback function inside an asynchronous call, any mutation performed in the callback is essentially un-trackable&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Vuex is a library that help us to implement the Flux architecture and enforce the described principles above. So that,
  your application data can be transparent and predictable when the data is shared accross multiple components.
  This article is only prepare you some knowledge in order to continue research on how to use Vuex and Store. I hope
  you will feel well equiped to get the answers you looking for&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://vuejsdevelopers.com/2017/05/15/vue-js-what-is-vuex/&quot;&gt;WTF is Vuex? A Beginner’s Guide To Vue’s Application Data Store&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 29 Jan 2020 00:00:00 +0700</pubDate>
        <link>https://datshiro.github.io//2020/01/29/vuex/</link>
        <guid isPermaLink="true">https://datshiro.github.io//2020/01/29/vuex/</guid>
        
        <category>Tech</category>
        
        <category>Vue</category>
        
        
      </item>
    
      <item>
        <title>Review Book - Vọng Sài Gòn</title>
        <description>&lt;h1 id=&quot;quyển-sách-kể-về-những-giai-kỳ-của-một-sài-gòn-sầm-uất&quot;&gt;Quyển sách kể về những giai kỳ của một Sài Gòn sầm uất&lt;/h1&gt;
&lt;p&gt;Tác giả: Trác Thúy Miêu&lt;/p&gt;

&lt;p&gt;Tôi không phải là người dân Sài Gòn gốc rặc mà thay vào đó chỉ là 1 chàng trai sinh viên mới ra trường, ngót ngén ăn nhờ ở đậu giữa thành phố này cũng chỉ mới được một năm, nhưng lạ thay thì tôi lại có một cảm giác đặc biệt với thành phố này. Nó đông đúc, ồn ào, nhưng nồng nhiệt và hào sảng bởi những con người dân nơi đây.&lt;/p&gt;

&lt;p&gt;Một hôm tình cờ thì tôi lại biết được tới quyển sách này thông qua một đoạn video của chị Trác Thúy Miêu, tôi thực sự thích chị vì lối văn phong rặc chất nam bộ, cùng với đài từ vô cùng phong phú. Bên cạnh đó là những quan niệm về cuộc sống, tình yêu, văn hóa của chị làm tôi thật sự xúc động, bởi vậy mà khi phát hiện ra có 1 cuốn sách của Trác Thúy Miêu, không do dự, tôi đã đặt mua ngay.&lt;/p&gt;

&lt;h1 id=&quot;chúng-ta-đã-sống-ở-thành-phố-này-lâu-như-vậy-nhưng-chúng-ta-có-biết-gì-về-nó-không&quot;&gt;Chúng ta đã sống ở thành phố này lâu như vậy, nhưng chúng ta có biết gì về nó không?&lt;/h1&gt;
</description>
        <pubDate>Wed, 29 Jan 2020 00:00:00 +0700</pubDate>
        <link>https://datshiro.github.io//2020/01/29/vong-sai-gon/</link>
        <guid isPermaLink="true">https://datshiro.github.io//2020/01/29/vong-sai-gon/</guid>
        
        <category>book-review</category>
        
        
      </item>
    
  </channel>
</rss>
