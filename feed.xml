<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dat Shiro Blog</title>
    <description>Barber is a blog theme for Jekyll built by Thomas Vaeth for Samesies using HTML, Sass, and JavaScript.
</description>
    <link>https://datshiro.github.io</link>
    <atom:link href="https://datshiro.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 01 Feb 2020 14:26:39 +0700</pubDate>
    <lastBuildDate>Sat, 01 Feb 2020 14:26:39 +0700</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>Chênh vênh tuổi 24</title>
        <description>&lt;h1 id=&quot;người-khác-đã-thành-công-rồi-vậy-khi-nào-đến-tôi&quot;&gt;Người khác đã thành công rồi, vậy khi nào đến tôi?&lt;/h1&gt;

&lt;p&gt;Chợt bất giác đêm nay nhớ về một người cũ từng biết qua. Người đó còn rất trẻ, giỏi giang và thành đạt khi chỉ hơn tôi 2 tuổi ở hiện tại. Một điều gì đó kỳ lạ đã thôi thúc tôi để tìm cho ra được Facebook của người đó chỉ với vài manh mối nhỏ.&lt;/p&gt;

&lt;p&gt;Và bài post đầu tiên của người đó là khoe về căn nhà mà người đó đã tự dựng lên từ đôi bàn tay trắng, người đó đã mở được một chuỗi cửa hàng trong thành phố này.&lt;/p&gt;

&lt;p&gt;Nhìn vào những gì người đó đã trải qua và đang có được. Điều đó ám ảnh tôi về tương lai. Tôi đã có được một công việc và mức lương mà đối với một sinh viên mới ra trường như tôi không dễ để có được. Và tôi đã thực sự “ngủ quên trên chiến thắng” mà thực ra là mình may mắn có được. Tuy nhiên, chỉ như vậy thì sẽ không giúp tôi giàu có hơn được, và tôi thừa sức biết điều đó mà vẫn mặc nhiên không thực sự để tâm đến cho đến hôm nay.&lt;/p&gt;

&lt;h1 id=&quot;tôi-đã-sống-mà-không-có-phương-hướng-mục-tiêu-cho-sự-nghiệp&quot;&gt;Tôi đã sống mà không có phương hướng, mục tiêu cho sự nghiệp&lt;/h1&gt;

&lt;p&gt;Tôi muốn đạt được vị trí như thế nào trong tương lai? Tôi muốn mình sẽ có được gì? Tôi muốn cống hiến tuổi trẻ của mình cho điều gì? Hầu như tôi chưa từng nghĩ tới, cho đến hôm nay những người đàn anh của tôi nhắc nhở thì tôi mới nhận ra: tại sao việc quan trọng như thế mà trước giờ tôi cứ mãi trì hoãn việc nghĩ về nó?&lt;/p&gt;

&lt;p&gt;Và điều kinh khủng đó là, tôi không thể nghĩ ra được, tôi đang vẫn trượt dài theo những gì cuộc sống diễn ra và chạy theo nó. Tôi hoang mang liệu rằng mình có thực sự muốn tiếp tục bước tiếp với cầu nghề này không? Hay là tôi nên tìm công việc gì khác? Tôi có nên gạt bỏ mọi thứ để tìm hiểu bản thân mình? … ngày lúc này đây khi đang viết những dòng này, tôi nghĩ rằng mình cứ nên bước tiếp bởi nếu như đến một ngày nào đó tôi tìm được một công việc khác, thì ít ra tôi đã đang phấn đấu để trở nên tốt hơn thay vì là ủ dột với mớ suy nghĩ miên mang này.&lt;/p&gt;

&lt;h1 id=&quot;thật-tốt-vì-tôi-đã-mua-chiếc-điện-thoại-làm-tôi-hối-hận&quot;&gt;Thật tốt vì tôi đã mua chiếc điện thoại làm tôi hối hận&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/chenh_venh_tuoi_24_1.jpeg&quot; alt=&quot;/assets/images/chenh_venh_tuoi_24_1.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Hôm qua tôi đã mua chiếc điện thoại mới này, với số tiền kỳ thực tôi không bao giờ nghĩ tới việc dùng để mua điện thoại. Và nó đã khiến tôi trăn trở suốt đêm hôm qua. Tôi cảm thấy tiếc tiền, tôi cảm thấy đáng lẽ ra mình phải để dành tiền chứ, tiết kiệm để làm điều khác, tôi lại nghĩ tiếp những lí do lẽ ra mình mua cái rẻ tiền hơn thì tốt hơn nhiều. Nếu như tôi mua chiếc điện thoại với phiên bản rẻ hơn, có lẽ tôi sẽ cảm thấy hài lòng và không có những trăn trở này  và không biết đến khi nào tôi thực sự thức tỉnh.&lt;/p&gt;

&lt;p&gt;Nếu như mua chiếc điện thoại rẻ hơn tôi sẽ không bao giờ nghĩ mình cần phải kiếm nhiều tiền hơn nữa. Nếu như không muốn mua nhiều thứ tôi đã mãi hài lòng với số lương mình có được (mặc dù nó không phải là con số nhỏ)&lt;/p&gt;

&lt;p&gt;Và chính vì vậy mà tôi cảm thấy thực sự cần phải nghiêm túc suy nghĩ về tương lai, tôi đang viết bài này vào lúc gần 3 giờ sáng và tôi vẫn đang bừng tỉnh vì điều này. Tôi cảm thấy “nếu không nhanh lên, sẽ không kịp nữa”&lt;/p&gt;

&lt;h1 id=&quot;hiện-tại-tôi-có-thể-làm-được-những-gì&quot;&gt;Hiện tại, tôi có thể làm được những gì?&lt;/h1&gt;

&lt;p&gt;Hiển nhiên là tôi có thể làm website, tại vì tôi là lập trình viên web mà. Tôi đang nghĩ là mình nên hợp tác làm freelance với người khác, đây có lẻ là cách thực tế nhất đối với tôi ở thời điểm hiện tại.&lt;/p&gt;

&lt;p&gt;Tôi học được một chút kỹ năng quản lý, có lẽ là tôi có thể quản lý được 1 2 bạn, nhưng tôi vẫn chưa thực sự hiệu quả&lt;/p&gt;

&lt;p&gt;Tôi có thể làm web nhưng đó chỉ mới là tính năng bình thường, cơ bản. Vẫn còn nhưng thứ liên quan khác tôi vẫn chưa biết? Vậy tôi có nên nghiên cứu AI? Tôi cũng không chắc nữa.&lt;/p&gt;

&lt;p&gt;Tuy nhiên, cho tới thời điểm hiện tại, tôi không thể cứ mãi như vầy được. Tôi cần làm thêm cái gì đó, tôi cần có nhiều thứ để làm, để nó chèn ép thời gian của chính tôi. Tôi cần làm nhiều tiền hơn, điều đó có nghĩa là tôi phải siêng năng hơn.&lt;/p&gt;
</description>
        <pubDate>Sat, 01 Feb 2020 00:00:00 +0700</pubDate>
        <link>https://datshiro.github.io/2020/02/01/chenh-venh-tuoi-24/</link>
        <guid isPermaLink="true">https://datshiro.github.io/2020/02/01/chenh-venh-tuoi-24/</guid>
        
        <category>life-lesson</category>
        
        <category>career</category>
        
        
      </item>
    
      <item>
        <title>What is Vuex?</title>
        <description>&lt;p&gt;If you’re building a medium to large sized app, your state — all the data you need to keep track of — can get pretty complicated.&lt;/p&gt;

&lt;p&gt;It’s not just the amount of information you have to deal with either. The different interactions between your state and all of the different ways your state can change only add to this complexity.&lt;/p&gt;

&lt;p&gt;Managing state is a difficult task! So many bugs and wasted time are due to very complicated state and logic.&lt;/p&gt;

&lt;p&gt;That’s why Evan You created Vuex to go along with Vue.&lt;/p&gt;

&lt;p&gt;It’s not necessary to use for small projects or projects with simple state. But for larger projects, it’s absolutely essential.&lt;/p&gt;

&lt;p&gt;And here’s an interesting fact.&lt;/p&gt;

&lt;p&gt;Evan You originally intended Vuex to be pronounced “vukes” — rhyming with “pukes”. But so many people pronounced it as “view-ex” that he changed his mind 😂.&lt;/p&gt;

&lt;h2 id=&quot;what-is-vuex-and-what-can-vuex-solves&quot;&gt;What is Vuex? and what can Vuex solves?&lt;/h2&gt;
&lt;p&gt;There are cases that you want to share data, state between your components, using Vuex is what you should thinking about.
  First, we should go through to know “Flux” which forms the basis of Vuex, Redux and other similar libraries.&lt;/p&gt;

&lt;h3 id=&quot;flux-is-a-design-pattern-not-a-library&quot;&gt;Flux is a design pattern, not a library&lt;/h3&gt;
&lt;p&gt;The idea of Flux is that defining a set of guiding principles for a scalable front end architecture which is suitable for complex UI app with components and shared data state.&lt;/p&gt;

&lt;p&gt;Vuex and Redux are actually implementation of Flux pattern
  Vuex, in fact, does not implement fully of Flux. Instead, we only need to focus on some key principles below.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;principle-1-single-source-of-truth&quot;&gt;Principle #1: Single Source of Truth&lt;/h4&gt;
  &lt;p&gt;As we’ve known, every component has local data and they don’t care about the other components as well. But if there is any data need to be shared between components needs to be kept in a single place - called &lt;strong&gt;“Store”&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;principle-2-data-is-read-only&quot;&gt;Principle #2: Data is Read-Only&lt;/h4&gt;
  &lt;p&gt;Components are freely to read data from “Store”, but they &lt;strong&gt;cannot change&lt;/strong&gt; the data &lt;strong&gt;directly&lt;/strong&gt;. Instead, they must inform the changes to “Store” through set of defined methods called &lt;strong&gt;“Mutation”&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;principle-3-mutations-must-be-synchronous&quot;&gt;Principle #3: Mutations Must Be Synchronous&lt;/h4&gt;
  &lt;p&gt;Synchronous Mutations ensure state is not dependent on any sequence and timing events. For example, callback function inside an asynchronous call, any mutation performed in the callback is essentially un-trackable&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Vuex is a library that help us to implement the Flux architecture and enforce the described principles above. So that,
  your application data can be transparent and predictable when the data is shared accross multiple components.
  This article is only prepare you some knowledge in order to continue research on how to use Vuex and Store. I hope
  you will feel well equiped to get the answers you looking for&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://vuejsdevelopers.com/2017/05/15/vue-js-what-is-vuex/&quot;&gt;WTF is Vuex? A Beginner’s Guide To Vue’s Application Data Store&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 29 Jan 2020 00:00:00 +0700</pubDate>
        <link>https://datshiro.github.io/2020/01/29/vuex/</link>
        <guid isPermaLink="true">https://datshiro.github.io/2020/01/29/vuex/</guid>
        
        <category>Tech</category>
        
        <category>Vue</category>
        
        
      </item>
    
  </channel>
</rss>
